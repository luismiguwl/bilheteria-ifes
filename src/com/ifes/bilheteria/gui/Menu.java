package com.ifes.bilheteria.gui;

import com.ifes.bilheteria.gui.cadastro.CadastroDeEvento;
import com.ifes.bilheteria.acessoadados.*;
import com.ifes.bilheteria.entidades.Evento;
import com.ifes.bilheteria.enums.*;
import java.util.List;
import java.util.stream.Collectors;
import org.apache.commons.csv.CSVRecord;

import static com.ifes.bilheteria.enums.Destino.*;
import static com.ifes.bilheteria.gui.UtilsGUI.*;
import static com.ifes.bilheteria.acessoadados.LeitorDeCSV.*;
import static com.ifes.bilheteria.enums.Categoria.*;
import com.ifes.bilheteria.gui.interfaces.ConfiguracaoDeJFrame;

public class Menu extends javax.swing.JFrame implements ConfiguracaoDeJFrame {

    private String[] categorias = UtilsEnum.obterListaContendoTextoDeCadaCategoria();
    private String[] colunas = {"Nome", "Data de início", "Cidade"};

    public Menu() {
        initComponents();
        configurar();

        Object[][] dados = obterEventosDisponiveis();
        renderizarTabela(tabela, jScrollPane1, dados, colunas);
        tabela.setEnabled(false);

        renderizarJComboBox(comboBoxCategoriaEvento, categorias);
        comboBoxCategoriaEvento.setSelectedItem(TODAS.get());
    }

    private Object[][] obterEventosDisponiveis() {
        List<CSVRecord> records = ler(EVENTOS_DISPONIVEIS);

        ParseadorDeEvento parseador = new ParseadorDeEvento();
        List<Evento> eventos = parseador.obterLista();

        Object[][] dados = preencherArrayDeObjectComEventos(eventos);
        return dados;
    }

    private Object[][] obterEventosDisponiveis(Categoria categoria) {
        List<CSVRecord> records = ler(EVENTOS_DISPONIVEIS);

        ParseadorDeEvento parseador = new ParseadorDeEvento();
        List<Evento> eventos = parseador.obterLista();

        if (!categoria.equals(TODAS)) {
            eventos = filtrarEventosPorCategoria(eventos, categoria);
        }

        Object[][] dados = preencherArrayDeObjectComEventos(eventos);
        return dados;
    }

    private List<Evento> filtrarEventosPorCategoria(List<Evento> eventos, Categoria categoria) {
        return eventos.stream()
                .filter(evento -> evento.getCategoria().equals(categoria))
                .collect(Collectors.toList());
    }

    private Object[][] preencherArrayDeObjectComEventos(List<Evento> eventos) {
        Object[][] dados = new Object[eventos.size()][colunas.length];

        for (int i = 0; i < dados.length; i++) {
            Evento evento = eventos.get(i);

            dados[i][0] = evento.getNome();
            dados[i][1] = evento.getDataDeInicio().getDataFormatada();
            dados[i][2] = evento.getCidade().getNome();
        }

        return dados;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboBoxCategoriaEvento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setForeground(new java.awt.Color(194, 123, 123));
        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BILHETERIA");

        tabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        jLabel2.setText("Eventos disponíveis");

        comboBoxCategoriaEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCategoriaEvento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxCategoriaEventoItemStateChanged(evt);
            }
        });

        jLabel3.setText("Categoria");

        jButton1.setText("ATUALIZAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addComponent(comboBoxCategoriaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCategoriaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Ações");

        jMenuItem1.setText("Cadastrar novo evento");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCategoriaEventoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxCategoriaEventoItemStateChanged
        Categoria categoriaAtual = obterCategoriaAtual();
        Object[][] dados = obterEventosDisponiveis(categoriaAtual);
        renderizarTabela(tabela, jScrollPane1, dados, colunas);
    }//GEN-LAST:event_comboBoxCategoriaEventoItemStateChanged

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new CadastroDeEvento().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Categoria categoriaAtual = obterCategoriaAtual();
        Object[][] dados = obterEventosDisponiveis(categoriaAtual);
        renderizarTabela(tabela, jScrollPane1, dados, colunas);
    }//GEN-LAST:event_jButton1ActionPerformed

    private Categoria obterCategoriaAtual() {
        String categoriaSelecionada = comboBoxCategoriaEvento.getSelectedItem().toString();
        return Categoria.valueOf(categoriaSelecionada.toUpperCase());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxCategoriaEvento;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    @Override
    public void centralizarTela() {
        centralizarTelaNoMeio(this);
    }

    @Override
    public void acaoAoClicarEmFechar() {
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    @Override
    public void configurar() {
        centralizarTela();
        acaoAoClicarEmFechar();
    }
}
