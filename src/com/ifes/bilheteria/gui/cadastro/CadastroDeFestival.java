/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ifes.bilheteria.gui.cadastro;

import com.ifes.bilheteria.acessoadados.*;
import com.ifes.bilheteria.entidades.*;
import com.ifes.bilheteria.enums.*;
import static com.ifes.bilheteria.gui.UtilsGUI.*;
import com.ifes.bilheteria.gui.interfaces.*;
import java.util.ArrayList;
import java.util.List;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

public class CadastroDeFestival extends javax.swing.JFrame implements ConfiguracaoDeJFrame, UtilizadorDeSelecionadorDeData, UtilizadorDeSelecionadorDeHorario, UtilizadorDaCaixaDeTexto {

    private SelecionadorDeData selecionadorDeData;
    private SelecionadorDeHorario selecionadorDeHorario;
    private List<String> atracoes = new ArrayList<>();
    private String[] colunas = {"Nome"};

    public CadastroDeFestival() {
        initComponents();
        configurar();

        campoData.setEnabled(false);
        campoData.setEditable(false);
        campoHorario.setEnabled(false);
        campoHorario.setEditable(false);
        
        renderizarTabela(listaDeAtracoes, jScrollPane1, colunas);
        
        String[] classificacoes = ParseadorDeClassificacaoIndicativa.preencherArray();
        renderizarJComboBox(comboBoxClassificacaoIndicativa, classificacoes);
        
        String[] cidades = ParseadorDeCidade.preencherArray();
        renderizarJComboBox(comboBoxCidades, cidades);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoData = new javax.swing.JTextField();
        botaoSelecionarData = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoHorario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeAtracoes = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        botaoSelecionarHorario = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboBoxClassificacaoIndicativa = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboBoxCidades = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Descrição");

        campoDescricao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("Data");

        campoData.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botaoSelecionarData.setText("SELECIONAR");
        botaoSelecionarData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarDataActionPerformed(evt);
            }
        });

        jLabel3.setText("Horário");

        campoHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setText("Atrações");

        listaDeAtracoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(listaDeAtracoes);

        jButton3.setText("ADICIONAR ATRAÇÃO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        botaoSelecionarHorario.setText("SELECIONAR");
        botaoSelecionarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarHorarioActionPerformed(evt);
            }
        });

        jButton1.setText("SALVAR FESTIVAL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Classificação indicativa");

        comboBoxClassificacaoIndicativa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Cidade");

        comboBoxCidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoHorario, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoSelecionarHorario))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoSelecionarData))
                            .addComponent(campoDescricao)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(32, 32, 32)
                        .addComponent(comboBoxClassificacaoIndicativa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(78, 78, 78)
                                    .addComponent(jLabel4)
                                    .addGap(45, 45, 45)
                                    .addComponent(jButton3)
                                    .addGap(35, 35, 35)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(30, 30, 30)
                        .addComponent(comboBoxCidades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoSelecionarData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSelecionarHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboBoxClassificacaoIndicativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboBoxCidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSelecionarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarDataActionPerformed
        if (selecionadorDeData == null) {
            selecionadorDeData = new SelecionadorDeData(this);
            selecionadorDeData.setVisible(true);
        }

        deixarJanelaVisivelCasoEstejaInvisivel(selecionadorDeData);
    }//GEN-LAST:event_botaoSelecionarDataActionPerformed

    private void botaoSelecionarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarHorarioActionPerformed
        if (selecionadorDeHorario == null) {
            selecionadorDeHorario = new SelecionadorDeHorario(this);
            selecionadorDeHorario.setVisible(true);
        }

        deixarJanelaVisivelCasoEstejaInvisivel(selecionadorDeHorario);
    }//GEN-LAST:event_botaoSelecionarHorarioActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new CaixaDeTextoComum(this).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (camposSaoValidos()) {
            String nome = campoDescricao.getText().trim();
            Data data = getDataSelecionada();
            Horario horario = getHorarioSelecionado();
            ClassificacaoIndicativa classificacao = definirClassificacaoIndicativa(comboBoxClassificacaoIndicativa);
            
            String nomeDaCidade = obterItemSelecionadoConvertidoEmString(comboBoxCidades);
            int idCidade = new ParseadorDeCidade().obterIdDaCidadeBaseadoNoNome(nomeDaCidade);
            Cidade cidade = new Cidade(idCidade, nomeDaCidade);
            
            Evento festival = new Festival(nome, data, Categoria.FESTIVAL, horario, cidade, classificacao, atracoes);
            EscritorDeCSV escritor = new EscritorDeCSV(Destino.FESTIVAIS);
            escritor.escreverEventoNoArquivoCSV(festival);
            
            exibirMensagemNaTela("EVENTO CADASTRADO!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean camposSaoValidos() {
        ValidadorDeCampos validador = new ValidadorDeCampos();
        
        if (!validador.camposPossuemAlgumTexto(campoData, campoDescricao, campoHorario)) {
            exibirMensagemNaTela("Preencha todos os campos!");
            return false;
        }
        
        if (atracoes.isEmpty()) {
            exibirMensagemNaTela("Informe ao menos uma atração!");
            return false;
        }
        
        return true;
    }
    
    private Data getDataSelecionada() {
        return new Data(campoData.getText());
    }
    
    private Horario getHorarioSelecionado() {
        return new Horario(campoHorario.getText());
    }
    
    private Object[][] obterDadosAtualizados() {
        Object[][] dados = new Object[atracoes.size()][colunas.length];

        for (int i = 0; i < dados.length; i++) {
            dados[i][0] = atracoes.get(i);
        }

        return dados;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroDeFestival().setVisible(true);
            }
        });
    }

    @Override
    public void centralizarTela() {
        centralizarTelaNoMeio(this);
    }

    @Override
    public void acaoAoClicarEmFechar() {
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    @Override
    public void configurar() {
        centralizarTela();
        acaoAoClicarEmFechar();
    }

    @Override
    public void renderizar(Data data) {
        campoData.setText(data.getDataFormatada());
        campoData.setEnabled(true);
        botaoSelecionarData.setText("EDITAR");
    }

    @Override
    public void renderizar(Horario horario) {
        campoHorario.setText(horario.getHoraFormatada());
        campoHorario.setEnabled(true);
        botaoSelecionarHorario.setText("EDITAR");
    }

    @Override
    public void renderizar(String texto) {
        atracoes.add(texto);
        atualizarListaDeAtracoes();
    }
    
    private void atualizarListaDeAtracoes() {
        listaDeAtracoes.setEnabled(true);
        Object[][] o = obterDadosAtualizados();
        renderizarTabela(listaDeAtracoes, jScrollPane1, o, colunas);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoSelecionarData;
    private javax.swing.JButton botaoSelecionarHorario;
    private javax.swing.JTextField campoData;
    private javax.swing.JTextField campoDescricao;
    private javax.swing.JTextField campoHorario;
    private javax.swing.JComboBox<String> comboBoxCidades;
    private javax.swing.JComboBox<String> comboBoxClassificacaoIndicativa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaDeAtracoes;
    // End of variables declaration//GEN-END:variables
}
