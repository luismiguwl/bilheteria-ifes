package com.ifes.bilheteria.gui.cadastro;

import com.ifes.bilheteria.acessoadados.*;
import com.ifes.bilheteria.entidades.*;
import com.ifes.bilheteria.enums.*;
import static com.ifes.bilheteria.gui.UtilsGUI.*;
import com.ifes.bilheteria.gui.interfaces.*;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class CadastroDeFilme extends javax.swing.JFrame implements ConfiguracaoDeJFrame, UtilizadorDeSelecionadorDeData, UtilizadorDeSelecionadorDeHorario, UtilizadorDeSelecionadorDeDuracao {

    private SelecionadorDeData selecionadorDeData;
    private SelecionadorDeHorario selecionadorDeHorario;
    private SelecionadorDeDuracao selecionadorDeDuracao;

    public CadastroDeFilme() {
        initComponents();
        configurar();

        campoData.setEnabled(false);
        campoData.setEditable(false);
        campoHorario.setEnabled(false);
        campoHorario.setEditable(false);
        campoDuracao.setEditable(false);
        campoDuracao.setEnabled(false);

        String[] classificacoes = ParseadorDeClassificacaoIndicativa.preencherArray();
        renderizarJComboBox(comboBoxClassificacaoIndicativa, classificacoes);

        String[] cidades = ParseadorDeCidade.preencherArray();
        renderizarJComboBox(comboBoxCidades, cidades);
        renderizarComboBoxDeCinemasBaseadoNaCidade();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoData = new javax.swing.JTextField();
        botaoSelecionarData = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoHorario = new javax.swing.JTextField();
        botaoSelecionarHorario = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboBoxClassificacaoIndicativa = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        comboBoxCidades = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboBoxCinema = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        campoDuracao = new javax.swing.JTextField();
        botaoSelecionarDuracao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tìtulo do filme");

        campoDescricao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("Data");

        campoData.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botaoSelecionarData.setText("SELECIONAR");
        botaoSelecionarData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarDataActionPerformed(evt);
            }
        });

        jLabel3.setText("Horário");

        campoHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botaoSelecionarHorario.setText("SELECIONAR");
        botaoSelecionarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarHorarioActionPerformed(evt);
            }
        });

        jLabel5.setText("Classificação indicativa");

        comboBoxClassificacaoIndicativa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Cidade");

        comboBoxCidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCidades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxCidadesItemStateChanged(evt);
            }
        });

        jLabel8.setText("Cinema");

        comboBoxCinema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("SALVAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Duração");

        campoDuracao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botaoSelecionarDuracao.setText("SELECIONAR");
        botaoSelecionarDuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarDuracaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(campoDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoSelecionarDuracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoHorario)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoSelecionarHorario))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoSelecionarData))
                                    .addComponent(campoDescricao)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxCidades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxCinema, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(32, 32, 32)
                                .addComponent(comboBoxClassificacaoIndicativa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoSelecionarData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSelecionarHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboBoxClassificacaoIndicativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboBoxCidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxCinema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSelecionarDuracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSelecionarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarDataActionPerformed
        if (selecionadorDeData == null) {
            selecionadorDeData = new SelecionadorDeData(this);
            selecionadorDeData.setVisible(true);
        }

        deixarJanelaVisivelCasoEstejaInvisivel(selecionadorDeData);
    }//GEN-LAST:event_botaoSelecionarDataActionPerformed

    private void botaoSelecionarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarHorarioActionPerformed
        if (selecionadorDeHorario == null) {
            selecionadorDeHorario = new SelecionadorDeHorario(this);
            selecionadorDeHorario.setVisible(true);
        }

        deixarJanelaVisivelCasoEstejaInvisivel(selecionadorDeHorario);
    }//GEN-LAST:event_botaoSelecionarHorarioActionPerformed

    private void comboBoxCidadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxCidadesItemStateChanged
        renderizarComboBoxDeCinemasBaseadoNaCidade();
    }//GEN-LAST:event_comboBoxCidadesItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (camposEstaoValidos()) {
            String nome = campoDescricao.getText().trim();
            Data data = getDataSelecionada();
            Horario horario = getHorarioSelecionado();
            ClassificacaoIndicativa classificacao = definirClassificacaoIndicativa(comboBoxClassificacaoIndicativa);

            String nomeDaCidade = obterItemSelecionadoConvertidoEmString(comboBoxCidades);
            int idCidade = new ParseadorDeCidade().obterIdDaCidadeBaseadoNoNome(nomeDaCidade);
            Cidade cidade = new Cidade(idCidade, nomeDaCidade);
            Cinema cinema = getCinemaSelecionado();

            ConversorDeDuracaoFormatada conversor = new ConversorDeDuracaoFormatada(campoDuracao.getText());
            Duracao duracao = conversor.converterStringFormatada();
            
            Evento filme = new Filme(nome, data, Categoria.FILME, horario, cidade, classificacao, cinema, duracao);
            
            EscritorDeCSV escrito = new EscritorDeCSV(Destino.FILMES);
            escrito.escreverEventoNoArquivoCSV(filme);
        } else {
            exibirMensagemNaTela("Preencha todos os campos!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botaoSelecionarDuracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarDuracaoActionPerformed
        if (selecionadorDeDuracao == null) {
            selecionadorDeDuracao = new SelecionadorDeDuracao(this);
            selecionadorDeDuracao.setVisible(true);
        }
        
        deixarJanelaVisivelCasoEstejaInvisivel(selecionadorDeDuracao);
    }//GEN-LAST:event_botaoSelecionarDuracaoActionPerformed

    private boolean camposEstaoValidos() {
        ValidadorDeCampos validador = new ValidadorDeCampos();
        return validador.camposPossuemAlgumTexto(campoData, campoDescricao, campoHorario, campoDuracao);
    }

    private Data getDataSelecionada() {
        return new Data(campoData.getText());
    }

    private Horario getHorarioSelecionado() {
        return new Horario(campoHorario.getText());
    }
    
    private Cinema getCinemaSelecionado() {
        List<Cinema> cinemas = new ParseadorDeCinema().obterLista();
        return cinemas.stream()
                .filter(cinema -> cinema.getNome().equals(obterItemSelecionadoConvertidoEmString(comboBoxCinema)))
                .collect(Collectors.toList())
                .get(0);
    }

    private void renderizarComboBoxDeCinemasBaseadoNaCidade() {
        int idDaCidadeSelecionada = new ParseadorDeCidade().obterIdDaCidadeBaseadoNoNome(getCidadeSelecionada());
        List<Cinema> cinemas = new ParseadorDeCinema().obterLista();
        List<String> textos = new ArrayList<>();

        for (Cinema cinema : cinemas) {
            if (cinema.getCidade().getId() == idDaCidadeSelecionada) {
                textos.add(cinema.getNome());
            }
        }

        renderizarJComboBox(comboBoxCinema, textos.toArray(new String[0]));
    }

    private String getCidadeSelecionada() {
        return obterItemSelecionadoConvertidoEmString(comboBoxCidades);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroDeFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroDeFilme().setVisible(true);
            }
        });
    }

    @Override
    public void renderizar(Data data) {
        campoData.setText(data.getDataFormatada());
        campoData.setEnabled(true);
        botaoSelecionarData.setText("EDITAR");
    }

    @Override
    public void renderizar(Horario horario) {
        campoHorario.setText(horario.getHoraFormatada());
        campoHorario.setEnabled(true);
        botaoSelecionarHorario.setText("EDITAR");
    }

    @Override
    public void renderizar(Duracao duracao) {
        campoDuracao.setText(duracao.getDuracaoFormatada());
        campoDuracao.setEnabled(true);
        botaoSelecionarDuracao.setText("EDITAR");
    }
    
    @Override
    public void centralizarTela() {
        centralizarTelaNoMeio(this);
    }

    @Override
    public void acaoAoClicarEmFechar() {
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    @Override
    public void configurar() {
        centralizarTela();
        acaoAoClicarEmFechar();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoSelecionarData;
    private javax.swing.JButton botaoSelecionarDuracao;
    private javax.swing.JButton botaoSelecionarHorario;
    private javax.swing.JTextField campoData;
    private javax.swing.JTextField campoDescricao;
    private javax.swing.JTextField campoDuracao;
    private javax.swing.JTextField campoHorario;
    private javax.swing.JComboBox<String> comboBoxCidades;
    private javax.swing.JComboBox<String> comboBoxCinema;
    private javax.swing.JComboBox<String> comboBoxClassificacaoIndicativa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables

}
