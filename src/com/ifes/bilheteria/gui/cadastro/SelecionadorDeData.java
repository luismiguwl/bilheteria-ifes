package com.ifes.bilheteria.gui.cadastro;

import com.ifes.bilheteria.gui.interfaces.*;
import com.ifes.bilheteria.entidades.Data;
import com.ifes.bilheteria.enums.Mes;
import static com.ifes.bilheteria.gui.UtilsGUI.*;
import static com.ifes.bilheteria.utils.UtilitarioDeData.*;

public class SelecionadorDeData extends javax.swing.JFrame implements ConfiguracaoDeJFrame {

    private Data data;
    private UtilizadorDeSelecionadorDeData utilizador;

    public SelecionadorDeData(UtilizadorDeSelecionadorDeData utilizador) {
        initComponents();
        
        this.utilizador = utilizador;
        
        configurar();
        renderizarDadosIniciais();
        definirData();
        renderizarDiasBaseadoNoMes();
        configurarDataParcial();
    }

    public SelecionadorDeData() {
        initComponents();
        configurar();
        renderizarDadosIniciais();
        definirData();
        renderizarDiasBaseadoNoMes();
        configurarDataParcial();
    }

    private void renderizarDadosIniciais() {
        int diaDoMes = getDiaDoMesAtual();
        Mes mesAtual = getMesAtual();
        String[] dias = popularArrayDeString(diaDoMes, mesAtual.getQuantidadeDeDias());
        String[] meses = preencherArrayDeMeses();
        String[] anos = preencherArrayDeAnos(2022, 2023);

        renderizarJComboBox(comboBoxDias, dias);
        renderizarJComboBox(comboBoxMeses, meses);
        renderizarJComboBox(comboBoxAnos, anos);
    }

    private String[] preencherArrayDeMeses() {
        Mes mes = getMesAtual();
        Mes[] meses = Mes.values();
        
        int numeroDoMes = Mes.getNumeroDoMes(mes);

        int indice = 0;
        String[] textos = new String[Mes.values().length-numeroDoMes + 1];
        for (int i = numeroDoMes - 1; i < Mes.values().length; i++) {
            textos[indice] = Mes.values()[i].getNome();
            indice++;
        }
        
        return textos;
    }

    private String[] preencherArrayDeAnos(int anoMinimo, int anoMaximo) {
        int length = (anoMaximo - anoMinimo) + 1;
        String[] anos = new String[length];

        for (int i = 0; i < anos.length; i++) {
            String anoAtual = Integer.toString(anoMinimo);
            anos[i] = anoAtual;
            anoMinimo++;
        }

        return anos;
    }

    private void configurarDataParcial() {
        campoDataParcial.setEditable(false);
        campoDataParcial.setText(data.getDataFormatada());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        comboBoxDias = new javax.swing.JComboBox<>();
        comboBoxAnos = new javax.swing.JComboBox<>();
        comboBoxMeses = new javax.swing.JComboBox<>();
        campoDataParcial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DIA");

        jLabel2.setText("MÃŠS");

        jLabel3.setText("ANO");

        jButton1.setText("SALVAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        comboBoxDias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxDias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDiasItemStateChanged(evt);
            }
        });

        comboBoxAnos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxAnos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxAnosItemStateChanged(evt);
            }
        });

        comboBoxMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxMeses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxMesesItemStateChanged(evt);
            }
        });

        campoDataParcial.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("DATA PARCIAL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(comboBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxAnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addComponent(campoDataParcial))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxAnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDataParcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
        definirData();
        configurarDataParcial();
        utilizador.renderizar(data);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboBoxDiasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDiasItemStateChanged
        definirData();
        configurarDataParcial();
    }//GEN-LAST:event_comboBoxDiasItemStateChanged

    private void comboBoxMesesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxMesesItemStateChanged
        definirData();
        configurarDataParcial();
        renderizarDiasBaseadoNoMes();
    }//GEN-LAST:event_comboBoxMesesItemStateChanged

    private void renderizarDiasBaseadoNoMes() {
        Mes mesSelecionado = getMesSelecionado();
        Mes mesAtual = getMesAtual();
        
        int diaInicial = 1;
        if (mesSelecionado.equals(mesAtual)) {
            int diaDoMes = getDiaDoMesAtual();
            diaInicial = diaDoMes;
        }
        
        String[] dias = popularArrayDeString(diaInicial, mesSelecionado.getQuantidadeDeDias());
        renderizarJComboBox(comboBoxDias, dias);
    }
    
    private void comboBoxAnosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxAnosItemStateChanged
        definirData();
        configurarDataParcial();
    }//GEN-LAST:event_comboBoxAnosItemStateChanged

    private void definirData() {
        int dia = getDiaSelecionado();
        Mes mes = getMesSelecionado();
        int ano = getAnoSelecionado();

        data = new Data(dia, mes, ano);
    }
    
    private int getDiaSelecionado() {
        return Integer.parseInt(obterItemSelecionadoConvertidoEmString(comboBoxDias));
    }
        
    private Mes getMesSelecionado() {
        String mesAtual = obterItemSelecionadoConvertidoEmString(comboBoxMeses);
        return Mes.valueOf(mesAtual.toUpperCase());
    }
    
    private int getAnoSelecionado() {
        return Integer.parseInt(obterItemSelecionadoConvertidoEmString(comboBoxAnos));
    }

    @Override
    public void centralizarTela() {
        centralizarTelaNoMeio(this);
    }

    @Override
    public void acaoAoClicarEmFechar() {
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    @Override
    public void configurar() {
        centralizarTela();
        acaoAoClicarEmFechar();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelecionadorDeData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelecionadorDeData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelecionadorDeData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelecionadorDeData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelecionadorDeData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoDataParcial;
    private javax.swing.JComboBox<String> comboBoxAnos;
    private javax.swing.JComboBox<String> comboBoxDias;
    private javax.swing.JComboBox<String> comboBoxMeses;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
